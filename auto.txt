《自动化设备监控系统》通讯协议（UDP）：
通讯流程：
1. 所有网络通讯都通过组播实现，每个网段（或网络接口）都有两个组播IP，分别是上行IP和下行IP。
    上行IP，用于客户端发送，服务器接收，下行IP则反之。
2. SN：消息处理单元的唯一标识，共96位，12个字节。
    消息组是SN的多层次集合。消息组分两种，
        ID&lt;0x8000：主消息组，代表一个与其对应的SN。
        ID>=0x8000:普通消息组，包含１个或多个其它消息组。每个消息处理单元都有且仅有一个主消息组。
    特殊ID：    0x0：服务器的主消息组ID。
            0xFFFE:全体客户端
            0xFFFF:网络模块的主消息组ID。
3. 消息的接收者通过消息中附带的目标 消息组ID 列表来判断是否需要接收处理（或转发）此消息。
    消息中，附带需要处理此消息的消息组ID列表，和发送者的主消息组ID。
4. 上线初始化：
    服务器上线后：
        1. 广播发送消息组表版本和上下行IP；
    服务器接收客户端上线通知后：
        1. 如果收到的上线通知不是新客户端(SN)发来的，跳到下一步骤，否则分配新的主消息组；
        2. 发送消息组表版本和上下行IP；
    客户端上线后：
        1. 广播发送上线通知，包括SN；
        2. 收到消息组表版本和上下行IP，跳到步骤4；
        3. 等待一段时间后，如果仍未收到消息组表版本和上下行IP，回到步骤1；
        4. 如果服务器的消息组表版本比较新，发送请求消息组表；
        5. 接收消息组表，并更新自己所属的组；
5. 发送者发送消息后，要等待回应，如果回应正常，流程结束；如果回应帧为错误帧或等待超时则重发。
    如果有多个处理单元需要处理此消息，发送者需等待所有处理单元全部回应正常才能结束本次流程。
           如果目标ID是全体客户端，接收者不需要发送回应帧。
6. 中层机仅转发消息，不会发消息给下位机，也不处理下位机的消息。
消息格式：目标域、标志域、序号域、数据域
目标域：
字节│　0　│　1　│　2　│　3　│　4　│　5　│ ...
　　　└──┬──┘　　　└──┬──┘　　└──┬──┘
　　　　　域长度　　　ID数　　　消息组ID1
　　　　　(16 bit)　　(16 bit)　　　(16 bit)

域长度：本域（目标域）的字节数（当ID数为奇数时，需要填充２个字节，保证后面源域开始地址是４字节对齐）
ID数　：本域（目标域）的消息组ID总数
消息组ID：从小到大的有序列表。
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
v 以下部分在需要时直接转发给要处理的单元(SPI_105或本机处理函数) v
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

源域：
字节│　０　│　1　│　　 
　　　　└──┬─┘
　　　消息组ID
　　　 (16 bit)
序号标志域：帧序号、标志（4字节）
字节│　0　│　1　│　2　│　　　　　　　　3　　　　　　　　│
位　│　　　　　　　　　│24　25　26　27　28　29　30　31│
       └─────┬─────┘  　  　  　  ┌───┘　┌┘　　└─┐└──────┐
            帧序号      　  　  网络标志　　方向　帧类型　　错误标志
           (24 bit)
网络标志 (bit28)：本帧是否被网络模块处理。
方向标志 (bit29)：0=上行，1=下行
帧类型    (bit30)：0=发送帧，1=回应帧
错误标志    (bit31)：0=正常，1=错误
数据域：

请求帧必须包含命令类型、命令代码，而回应帧则没有命令类型、命令代码。

各种标志所代表的含义：

(上)　表示首先由上位机向下位机发送消息
        (下)　表示首先由下位机向上位机发送消息

        >　表示发送时附带的数据
        &lt;　表示回应时附带的数据
网络模块：
命令类型=4：网络模块

命令代码　　　　　　　　　　　　　　　附加数据（参数、回应结果）
        (上)　　0=重启

        (上)　　1=服务器上线通知(广播)　　　　>[4]本机类型标识，[4]上行IP，[4]下行IP，[4]消息组表版本

        (下)　　2=设备上线通知(广播/组播)　　　>[4]本机类型标识，[12]SN
        　　　　　　　　　　　　　　　　　　　&lt;[4]本机类型标识，[4]上行IP，[4]下行IP，[4]消息组表版本

         (上)0x10=消息组表版本　　　　　　　　>[4]版本
        (下)　　　　　　　　　　　　　　　　　&lt;[4]版本

        (上)0x11=消息组表　　　　　　　　　　>消息组表（详见下面的《消息组表格式》）
        (下)　　　　　　　　　　　　　　　　　&lt;消息组表（详见下面的《消息组表格式》）

        (上)0x20=固件更新(非强制)　　　　　　>[4]更新序号，[4]总长度，[4]固件起始地址，[4]版本

        (上)0x21=固件更新(强制－指定ＳＮ)　　>[4]更新序号，[4]总长度，[4]固件起始地址，[12]SN

        (下)0x28=固件段　　　　　　　　　　　>[4]更新序号，[4]固件段偏移地址
        (上)　　　　　　　　　　　　　　　　　>[4]更新序号，[4]固件段起始地址，[4]固件段长度，[n]固件段内容

        (下)0x29=确认更新完成　　　　　　　　>[4]更新序号

    消息组表格式：
        [4]版本，
        [2]主消息组数(mg)，
        [2]普通消息组数(ng)，
        [4]主消息组表的偏移字节数，
        [ng*2]普通消息组索引表：
        {
            [2]索引值（普通消息组相对于整个普通消息组表的首地址的偏移字节数）
        }，
        [0/2]全0（填充，保证下一项是4字节对齐）
        [mg*16]主消息组表：
        {
            [4]主消息组ID，
            [12]SN，
        }，
        [ng*16]普通消息组表：
        {
            [2]普通消息组ID，
            [1]子主消息组数(smg)，
            [1]子普通消息组数(sng)，
            [smg*2]子主消息组列表：
            {
                [2]主消息组表下标（第几个主消息组），
            }，
            [0/2]全0（填充，保证下一项是4字节对齐）
            [smg*2]子普通消息组列表：
            {
                [2]普通消息组索引表下标（第几个索引），
            }，
            [0/2]全0（填充，保证下一项是4字节对齐）
        }
           示例：

                    1234
                    3
                    3
                    4+2+2+2+(3+3)*2+3*16
                    [0,12,20,28]
                    [(1,32),(2,34),(3,87)]
                    [
                    10
                    1
                    2
                    [1]
                    [0,1]
                    ]
                    [
                    11
                    0
                    1
                    [ ]
                    [1]
                    ]
                    [
                    12
                    1
                    0
                    [2]
                    [ ]
                    ]
IPU（信息处理单元）
命令域：命令类型、命令代码（2字节）：
    字节│            0            │            1            │
    位　│00 01 02 03 04 05 06 07    │08 09 10 11 12 13 14 15│
          └───┬───┘                │└──────┬────┘          │   
            命令类型                  命令代码            分片标志 
            (8 bit)                  (7 bit)            (1 bit)

命令类型(8 bit)：可分配16个命令类型
命令代码(7 bit)：每个命令类型，可分配32个命令代码
分片标志(1 bit)：0=请求/命令帧，1=应答帧

分片域：分片序号（2字节）
    字节│            0            │            1            │
    位　│00 01 02 03 04 05 06 07    │08 09 10 11 12 13 14 15│
           └─────────────────────┬──────────────────────┘
                                分片序号
                                (16 bit)
    当要传输的数据总长度（包括头域）超过1472字节时，需要将数据分片传输（分片标志为1）。
    最大分片数：2^16=65536，即每个命令的最大数据长度是(2^16)*1472=92MB

数据域：帧数据（不定长度）

    命令类型：
        0 : 固件更新
        1 : 立即执行的命令
        2 : 时间表
        3 : 属性/状态
信息处理单元命令列表

命令类型=0：固件更新

命令代码　　　　　　　　　　　　　　　数据域（参数、回应结果）
        (上|命)    0=准备(非强制)　　　　　　　　>[4]更新序号，[4]总长度，[4]固件起始地址，[4]固件类型（详见下面《固件类型》说明），[4]版本
        (上|命)    1=准备(强制－指定固件类型)　　>[4]更新序号，[4]总长度，[4]固件起始地址，[4]固件类型
        (上|命)    2=准备(强制－指定ＳＮ)　　　　>[4]更新序号，[4]总长度，[4]固件起始地址，[12]SN

        (下|请)0x11=固件段　　　　　　　　　　　>[4]更新序号，[4]固件段偏移地址
        (上|数)　　　　　　　　　　　　　　　　　>[4]更新序号，[4]固件段起始地址，[4]固件段长度，[n]固件段内容

        (下|请)0x12=确认更新完成　　　　　　　　>[4]更新序号

        流程：
            1.(上)准备：客户退出正常运行模式，进入固件更新模式
            2.(下)请求 固件段（重复）
            3.(下)确认更新完成
        固件类型：{
        　　[1]层类型
        　　[1]主类型
        　　[2]次类型
        }
        其中的各“类型”值不能为0，在“强制－指定固件类型”时，值为0的部分即表示不指定此部分类型（层类型除外，也就是说必须指定层类型）


1=立即执行的命令

命令代码　　　　　　　　　　　　　　　数据域（参数、回应结果）
        (上|命)    1=时间同步                    >[2]当前年份，
                                              [2]周几（当前年份1月1日），
                                               [4]秒数（从当前年份1月1日开始的秒数）                                                    

        (上|命)    2=心跳检测

        (上|命)    3=重启

        (上|命) 0x10=临时任务                    >[4]是否有效，[12]临时任务信息

        (上|命) 0x11=读取临时任务状态            <[12]临时任务信息，如果当前不是正在执行临时任务，返回4个字节的0

        (上|命) 0x12=停止临时任务                

        临时任务信息：
            [4]持续时间（详见下面的《临时任务的执行流程》
            [2]类型：0=端口、1=控制点、2=任务、3=任务组
            [6]任务参数（根据类型，在以下4个中选一个）：
                 [4]端口号，[2]值；
                 [4]控制点ID，[2]值；
                 [4]任务索引表下标（第几个索引）；
                 [4]任务组索引表下标（第几个索引）；

        临时任务的执行流程：
            1. 接收到“临时任务”命令后，先保存当前所有控制点端口的状态，然后执行临时任务；
            2. 时间表执行时不改变真正的端口状态，而是改变之前保存的状态；
            3. 当到达持续时间或接收到“停止临时任务”命令时，把保存的状态写入到真正的端口中，时间表执行时恢复为直接输出到真正的的端口，流程结束。
        服务器上线或收到105上线通知后向105发送一次“读取临时任务状态”命令。

2=时间表

命令代码　　　　　　　　　　　　　　　数据域（参数、回应结果）
        (上|请)    0=服务器时间表版本                <[3:0]版本    ?

        (上|请)    1=服务器任务表版本                <[3:0]版本    ?

        (下|请)0x10=时间表                        <时间表（详见下面的《时间表格式》）		?
        (上|数)                                >时间表（详见下面的《时间表格式》）

        (下|请)0x11=任务组表                        >任务表（详见下面的《任务表格式》）		?
        (上|数)                                >任务表（详见下面的《任务表格式》）

        时间表格式：
            [4]时间表版本，
            [4]对应的任务表版本，
            [4]任务时刻数(t)
            [t*16]任务时刻：
            {
                [4]秒（从0点开始的秒数），
                [1]重复类型，
                [7]重复参数，
                [2]任务组索引表下标（第几个索引），
                [2]消息组ID/是否激活（0＝禁用，非0＝激活）
            }

        重复类型        重复参数
        0. 不重复        日期（年月日）x1
        1. 每天
        2. 每周        周几x7
        3. 每月        第几日x7
        4. 每年        （月、日）x3
        5. 每N秒     间隔秒数

    任务ID和任务组ID不能为0。
        任务表格式：
            [4]版本，
            [4]任务数(t)
            [4]任务组数(tg)
            [(t+tg)*2]索引表：
            {
                [2]索引值（相对于整个任务表的首地址的偏移字节数），先排任务，再排任务组
            }，
            [0/2]全0（填充，保证下一项是4字节对齐）
            [t*8]任务表：
            {
                [4]控制点
                [4]要写入控制点的值
            }
            [tg*(4+st*2+stg*2+(0/4))]任务组表：
            {
                [2]子任务数(st)，
                [2]子任务组数(stg)，
                [st*2]子任务：
                {
                    [2]索引表下标（第几个索引），
                }，
                [0/2]全0（填充，保证下一项是4字节对齐），
                [stg*2]子任务组：
                {
                    [2]索引表下标（第几个索引），
                }，            
                [0/2]全0（填充，保证下一项是4字节对齐），
            }
        任务组：在某一时刻需要完成的所有任务的集合，由用户决定。
        任务中的ID：控制点ID，表示此任务是向指定控制点写入指定值。

         (1)    (*)  (1)   (1)    (1)    (1)   (1)     (*)
    任务组&lt;------>任务&lt;------>控制点&lt;------>端口号&lt;------>GPIO口
3=属性/状态

(读：服务器发请求帧，下位机发数据回应帧)
(写：服务器发数据帧)

        　命令代码　　　　　　　　　　　　　　数据域（参数、回应结果）
        0x00=读取SN　　　　　　　　　　　　&lt;[12]SN

        0x01=读取固件版本　　　　　　　　　&lt;[4]固件版本

        0x10=读取端口总数　　　　　　　　　&lt;[1]端口总数

        0x12=读取端口映射（全部）　　　　　&lt;[4]端口数n，
        　　　　　　　　　　　　　　　　　　　[n*4]映射{
        　　　　　　　　　　　　　　　　　　　　　[4]控制点ID 或 监测点ID，
        　　　　　　　　　　　　　　　　　　　　　[4]输入输出类型（0＝单个GPIO口，1＝ADC/PWM）
        　　　　　　　　　　　　　　　　　　　}

        0x13=写入端口映射　　　　　　　　　>[4]端口数n，
        　　　　　　　　　　　　　　　　　　　[n*8]映射{
        　　　　　　　　　　　　　　　　　　　　　[4]端口号，
        　　　　　　　　　　　　　　　　　　　　　[4]控制点ID 或 监测点ID，
        　　　　　　　　　　　　　　　　　　　}

        0x14=读取报警阀值（全部）　　　　　&lt;[4]端口数n，
        　　　　　　　　　　　　　　　　　　　[n*8]阀值{
        　　　　　　　　　　　　　　　　　　　　　[2]阀值1，
        　　　　　　　　　　　　　　　　　　　　　[2]阀值2，
        　　　　　　　　　　　　　　　　　　　　　[2]阀值3，
        　　　　　　　　　　　　　　　　　　　　　[2]阀值4，
        　　　　　　　　　　　　　　　　　　　}
        0x15=写入报警阀值　　　　　　　　　>[4]端口数n，
        　　　　　　　　　　　　　　　　　　　[n*12]阀值{
        　　　　　　　　　　　　　　　　　　　　　[4]端口号，
        　　　　　　　　　　　　　　　　　　　　　[2]阀值1，
        　　　　　　　　　　　　　　　　　　　　　[2]阀值2，
        　　　　　　　　　　　　　　　　　　　　　[2]阀值3，
        　　　　　　　　　　　　　　　　　　　　　[2]阀值4，
        　　　　　　　　　　　　　　　　　　　}

        0x20=读取状态（全部）　　　　　　　&lt;[4]监测点数n，
        　　　　　　　　　　　　　　　　　　　[n*8]状态{
        　　　　　　　　　　　　　　　　　　　　　[4]监测点ID		//
        　　　　　　　　　　　　　　　　　　　　　[4]值
        　　　　　　　　　　　　　　　　　　　}

        0x23=状态报警　　　　　　　　　　　>[4]监测点ID，[4]值，[2]阀值1，[2]阀值2，[2]阀值3，[2]阀值4

        0x24=读取控制点目前的值（全部）　　&lt;[4]控制点数n，
        　　　　　　　　　　　　　　　　　　　[n*8]{
        　　　　　　　　　　　　　　　　　　　　　[4]控制点ID		//
        　　　　　　　　　　　　　　　　　　　　　[4]值
        　　　　　　　　　　　　　　　　　　　}

        0x27=向控制点写入新值　　　　　　　>[4]控制点数n，
        　　　　　　　　　　　　　　　　　　　[n*8]{
        　　　　　　　　　　　　　　　　　　　　　[4]控制点ID		//
        　　　　　　　　　　　　　　　　　　　　　[4]值
        　　　　　　　　　　　　　　　　　　　}

    控制点/监测点ID(32bit)：全局统一，对应于下位机（包括中层和底层设备）中的某个端口。
        同一ID，不同的下位机可对应不同的端口。但在一个下位机中ID与端口一一对应。
        控制点ID的最高位为0，监测点ID的最高位为1。
        0x00000000～0x00FFFFFF: 保留给未指定具体控制点ID的端口用的，[7:0]是端口号。
        0x01000000～0x01FFFFFC: 保留给特殊控制点，或者与端口无关的控制点
                    0x01FFFFFD: 代表全部特殊控制点
                    0x01FFFFFE: 代表全部普通控制点
                    0x01FFFFFF: 代表全部控制点（包括特殊控制点和普通控制点）
        0x02000000～0x7FFFFFFF: 控制点ID
        0x80000000～0x80FFFFFF: 保留给未指定具体监测点ID的端口用的，[23:8]主消息组ID，[7:0]是端口号。
        0x81000000～0x81FFFFFF: 保留给特殊监测点，或者与端口无关的监测点
                    0x81FFFFFD: 代表全部特殊监测点
                    0x81FFFFFE: 代表全部普通监测点
                    0x81FFFFFF: 代表全部监测点（包括特殊监测点和普通监测点）
        0x82000000～0xFFFFFFFC: 监测点ID

        初始化时下位机中的端口映射值为端口号，连接到服务器后可通过端口映射命令将各端口逐一映射到指定的ID。

    状态报警：
        以阀值1和阀值2为分割点，把监测点的值分为三个区域， 两个阀值之间（包括阀值本身）为正常状态。
        105客户端每隔一段时间检查一次，获取的新状态与上一次的状态比较，如果状态改变了
（从“正常状态”变为“异常状态” 或 从“异常状态” 变为“正常状态”），将发出“状态报警”。
        服务器上线或收到105上线通知后向105发送一次“读取状态（全部）”命令。